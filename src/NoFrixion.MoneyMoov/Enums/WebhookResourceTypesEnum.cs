// -----------------------------------------------------------------------------
// Filename: WebhookResourceTypesEnum.cs
// 
// Description: The different types of web hooks that are generated by the
// MoneyMoov API.
//
// Author(s):
// Aaron Clauson (aaron@nofrixion.com)
// 
// History:
// 24 Dec 2022  Aaron Clauson    Renamed from WebHook to WebhookResourceTypesEnum.
// 
// License:
// MIT.
// -----------------------------------------------------------------------------

using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace NoFrixion.MoneyMoov;

[Flags]
[JsonConverter(typeof(StringEnumConverter))]
public enum WebhookResourceTypesEnum
{
    None = 0,

    /// <summary>
    /// Represents a new transaction that corresponds to funds being received.
    /// This is a special case of Transaction. If both in and out transactions are
    /// desired the Transaction option can be used.
    /// </summary>
    Payin = 1,

    /// <summary>
    /// Will trigger notifications for payout related events. 
    /// </summary>
    /// <remarks>
    /// Note due to unfortunate naming if a merchant is using version 1 webhooks 
    /// this webhook type corresponds to a transaction where funds are being sent out,
    /// i.e. the opposite of payin.
    /// </remarks>
    Payout = 2,

    /// <summary>
    /// Will trigger notifications for payment request related events.
    /// </summary>
    PaymentRequest = 4,

    /// <summary>
    /// Will trigger notifications for rule related events.
    /// </summary>
    Rule = 8,

    /// <summary>
    /// Will trigger notifications for transaction related events.
    /// </summary>
    Transaction = 16,

    /// <summary>
    /// Will trigger notifications for a transaction that is receiving funds. 
    /// </summary>
    /// <remarks>
    /// This is the equivalent of the Payin type but is included for consistency.
    /// </remarks>
    TransactionPayin = 32,

    /// <summary>
    /// Will trigger notifications for a transaction that is sending funds. 
    /// </summary>
    /// <remarks>
    /// This is the equivalent of the version 1 Payout type.
    /// </remarks>
    TransactionPayout = 64,
}

